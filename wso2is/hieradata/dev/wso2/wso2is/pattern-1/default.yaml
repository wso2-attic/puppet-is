# Copyright (c) 2016, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
---
classes:
  - wso2is

wso2::service_name: wso2is
wso2::hostname: is.dev.wso2.org
wso2::mgt_hostname: is.dev.wso2.org

wso2::enable_thrift_service: false

wso2::template_list:
  - repository/conf/datasources/master-datasources.xml
  - repository/conf/datasources/bps-datasources.xml
  - repository/conf/datasources/metrics-datasources.xml
  - repository/conf/identity/identity.xml
  - repository/conf/user-mgt.xml
  - repository/conf/registry.xml
  - repository/conf/bps.xml
  - repository/conf/metrics.xml
  - repository/conf/carbon.xml
  - repository/conf/tomcat/catalina-server.xml
  - repository/conf/axis2/axis2.xml
  - bin/wso2server.sh

#  - repository/conf/security/cipher-text.properties
#  - repository/conf/security/cipher-tool.properties
#  - bin/ciphertool.sh

wso2::ports:
  proxyPort:
    https: 443
# http: 80

# File list to be copied to the product folder, if there are changes found in the files, the system
# service will be restarted
wso2::file_list:
  - "repository/components/lib/%{hiera('wso2::datasources::mysql::connector_jar')}"
#  - repository/conf/security/cipher-tool.properties
#  - repository/conf/security/cipher-text.properties
#  - repository/conf/security/secret-conf.properties

# Files to be copied to the product folder when restarting the system service
# wso2::service_refresh_file_list:

# Clustering configurations of the product in repository/conf/axis2/axis2.xml
# Clustering scheme can be wka, aws, kubenetes, mesos
wso2::clustering:
  enabled: true
  local_member_host: "%{::ipaddress}"
  local_member_port: 4000
  domain: is.wso2.domain
# WKA membership scheme
  membership_scheme: wka
  wka:
    members:
      -
        hostname: 192.168.48.194
        port: 4000
      -
        hostname: 192.168.48.195
        port: 4000
# AWS membership scheme
#  membership_scheme: aws
#  aws:
#    access_key: access-key
#    secret_key: secret-key
#    security_group: security-group
#    host_header: host-header
#    region: region
#    tag_key: tag-key
#    tag_value: tag-value

# Datasource configurations in repository/conf/datasources/master-datasources.xml
wso2::master_datasources:
  identity_ds:
    name: WSO2_IDENTITY_DS
    description: The datasource used for registry, user management and identity
    driver_class_name: "%{hiera('wso2::datasources::mysql::driver_class_name')}"
    url: jdbc:mysql://192.168.100.1:3306/WSO2_IDENTITY_DB?autoReconnect=true&amp;useSSL=false
    username: "%{hiera('wso2::datasources::mysql::username')}"
    password: "%{hiera('wso2::datasources::mysql::password')}"
    jndi_config: jdbc/WSO2IdentityDS
    max_active: "%{hiera('wso2::datasources::common::max_active')}"
    max_wait: "%{hiera('wso2::datasources::common::max_wait')}"
    test_on_borrow: "%{hiera('wso2::datasources::common::test_on_borrow')}"
    default_auto_commit: "%{hiera('wso2::datasources::common::default_auto_commit')}"
    validation_query: "%{hiera('wso2::datasources::mysql::validation_query')}"
    validation_interval: "%{hiera('wso2::datasources::common::validation_interval')}"

# BPS datasource configuration in repository/conf/datasources/bps-datasources.xml
wso2::bps_datasources:
  bps_ds:
    name: WSO2_BPS_DS
    description: The datasource used for bps
    driver_class_name: "%{hiera('wso2::datasources::mysql::driver_class_name')}"
    url: jdbc:mysql://192.168.100.1:3306/WSO2_IDENTITY_DB?autoReconnect=true
    username: "%{hiera('wso2::datasources::mysql::username')}"
    password: "%{hiera('wso2::datasources::mysql::password')}"
    jndi_config: bpsds
    max_active: "%{hiera('wso2::datasources::common::max_active')}"
    max_idle: "%{hiera('wso2::datasources::common::max_idle')}"
    max_wait: "%{hiera('wso2::datasources::common::max_wait')}"
    test_on_borrow: "%{hiera('wso2::datasources::common::test_on_borrow')}"
    use_datasource_factory: "%{hiera('wso2::datasources::common::use_datasource_factory')}"
    default_auto_commit: "%{hiera('wso2::datasources::common::default_auto_commit')}"
    validation_query: "%{hiera('wso2::datasources::mysql::validation_query')}"
    validation_interval: "%{hiera('wso2::datasources::common::validation_interval')}"

# Metrics datasource configuration in repository/conf/datasources/metrics-datasources.xml
wso2::metrics_datasources:
  # Metrics are to be stored local to the server. Thus an embedded H2 database is used here.
  # If necessary can be pointed to an external datasource.
  metrics_ds:
    name: WSO2_METRICS_DS
    description: The default datasource used for carbon metrics
    driver_class_name: "%{hiera('wso2::datasources::h2::driver_class_name')}"
    url: jdbc:h2:repository/database/WSO2METRICS_DB;DB_CLOSE_ON_EXIT=FALSE;AUTO_SERVER=TRUE
    username: "%{hiera('wso2::datasources::common::username')}"
    password: "%{hiera('wso2::datasources::common::password')}"
    jndi_config: jdbc/WSO2_METRICS_DS
    max_active: "%{hiera('wso2::datasources::common::max_active')}"
    max_wait: "%{hiera('wso2::datasources::common::max_wait')}"
    test_on_borrow: "%{hiera('wso2::datasources::common::test_on_borrow')}"
    default_auto_commit: "%{hiera('wso2::datasources::common::default_auto_commit')}"
    validation_query: "%{hiera('wso2::datasources::mysql::validation_query')}"
    validation_interval: "%{hiera('wso2::datasources::common::validation_interval')}"

# Primary user store configuration in repository/conf/user-mgt.xml
# User store can be a JDBC, read only/read write LDAP or Active Directory
wso2::user_store:
  user_store_type: jdbc
  user_store_properties:
    jdbc:
      driver_class_name: "%{hiera('wso2::datasources::mysql::driver_class_name')}"
      url: jdbc:mysql://192.168.100.1:3306/WSO2_USER_DB?autoReconnect=true&amp;useSSL=false
      username: "%{hiera('wso2::datasources::mysql::username')}"
      password: "%{hiera('wso2::datasources::mysql::password')}"
      read_only: false
      read_groups: true
      write_groups: true
      username_java_regex: '^[\S]{3,30}$'
      username_javascript_regex: '^[\S]{3,30}$'
      password_java_regex: '^[\S]{5,30}$'
      password_javascript_regex: '^[\S]{5,30}$'
      rolename_java_regex: '^[\S]{3,30}$'
      rolename_javascript_regex: '^[\S]{3,30}$'
      case_insensitive_username: false
      scim_enabled: true
      is_bulk_import_supported: false
      password_digest: SHA-256
      store_salted_password: true
      multi_attribute_separator: ','
      max_username_list_length: 100
      max_rolename_list_length: 100
      user_roles_cache_enabled: true
      user_name_unique_across_tenants: false
      validation_query: SELECT 1
      validation_interval: 30000
#    read-only-ldap:
#      connection_url: ldap://localhost:10389
#      connection_name: uid=admin,ou=system
#      connection_password: admin
#      anonymous_bind: false
#      user_search_base: ou=system
#      username_attribute: uid
#      username_search_filter: (&amp;(objectClass=person)(uid=?))
#      username_list_filter: (objectClass=person)
#      read_groups: true
#      group_search_base: ou=system
#      groupname_attribute: cn
#      groupname_search_filter: (&amp;(objectClass=groupOfNames)(cn=?))
#      groupname_list_filter: (objectClass=groupOfNames)
#      membership_attribute: member
#      back_links_enabled: false
#      username_java_regex: '[a-zA-Z0-9._\-|//]{3,30}$'
#      password_javaregex: '^[\S]{5,30}$'
#      rolename_java_regex: '[a-zA-Z0-9._\-|//]{3,30}$'
#      scim_enabled: false
#      password_hash_method: PLAIN_TEXT
#      multi_attribute_separator: ','
#      max_username_list_length: 100
#      max_rolename_list_length: 100
#      user_roles_cache_enabled: true
#      connection_pooling_enabled: true
#      ldap_connection_timeout: 5000
#      replace_escape_characters_at_user_login: true
#    read-write-ldap:
#      connection_url: ldap://localhost:10389
#      connection_name: uid=admin,ou=system
#      connection_password: admin
#      anonymous_bind: false
#      user_search_base: ou=Users,dc=wso2,dc=org
#      username_attribute: uid
#      username_search_filter: (&amp;(objectClass=person)(uid=?))
#      username_list_filter: (objectClass=person)
#      read_groups: true
#      write_groups: true
#      group_search_base: ou=system
#      groupname_attribute: cn
#      groupname_search_filter: (&amp;(objectClass=groupOfNames)(cn=?))
#      groupname_list_filter: (objectClass=groupOfNames)
#      membership_attribute: member
#      back_links_enabled: false
#      username_java_regex: '[a-zA-Z0-9._\-|//]{3,30}$'
#      username_javascript_regex: '^[\S]{3,30}$'
#      password_javaregex: '^[\S]{5,30}$'
#      password_javascript_regex: '^[\S]{5,30}$'
#      rolename_java_regex: '[a-zA-Z0-9._\-|//]{3,30}$'
#      rolename_javascript_regex: '^[\S]{3,30}$'
#      scim_enabled: true
#      is_bulk_import_supported: false
#      empty_roles_allowed: false
#      password_hash_method: PLAIN_TEXT
#      multi_attribute_separator: ','
#      max_username_list_length: 100
#      max_rolename_list_length: 100
#      kdc_enabled: false
#      user_roles_cache_enabled: true
#      connection_pooling_enabled: true
#      ldap_connection_timeout: 5000
#    active_directory:
#      connection_url: ldap://localhost:10389
#      connection_name: uid=admin,ou=system
#      connection_password: admin
#      anonymous_bind: false
#      user_search_base: ou=Users,dc=wso2,dc=org
#      username_attribute: uid
#      username_search_filter: (&amp;(objectClass=person)(uid=?))
#      username_list_filter: (objectClass=person)
#      read_groups: true
#      write_groups: true
#      group_search_base: ou=system
#      groupname_attribute: cn
#      groupname_search_filter: (&amp;(objectClass=groupOfNames)(cn=?))
#      groupname_list_filter: (objectClass=groupOfNames)
#      membership_attribute: member
#      member_of_attribute: memberOf
#      back_links_enabled: false
#      referral: follow
#      username_java_regex: '[a-zA-Z0-9._\-|//]{3,30}$'
#      username_javascript_regex: '^[\S]{3,30}$'
#      password_javaregex: '^[\S]{5,30}$'
#      password_javascript_regex: '^[\S]{5,30}$'
#      rolename_java_regex: '[a-zA-Z0-9._\-|//]{3,30}$'
#      rolename_javascript_regex: '^[\S]{3,30}$'
#      scim_enabled: false
#      is_bulk_import_supported: false
#      empty_roles_allowed: false
#      password_hash_method: PLAIN_TEXT
#      multi_attribute_separator: ','
#      is_adlds_role: false
#      user_account_control: 512
#      max_username_list_length: 100
#      max_rolename_list_length: 100
#      membership_attribute_range: 1500
#      kdc_enabled: false
#      user_roles_cache_enabled: true
#      connection_pooling_enabled: true
#      ldap_connection_timeout: 5000

# User management admin user/role configurations and the datasource configuration in repository/conf/user-mgt.xml
wso2::user_management:
  add_admin: true
  admin_role: admin
  admin_username: "%{hiera('wso2::super_admin::username')}"
  admin_password: "%{hiera('wso2::super_admin::password')}"
  datasource: identity_ds

# Identity datasource configuration in repository/conf/identity/identity.xml
wso2::identity_datasource: identity_ds

# BPS datasource configuration in repository/conf/bps.xml
wso2::bps_datasource: bps_ds

# Metrics datasource configuration in repository/conf/metrics.xml
wso2::metrics_datasource: metrics_ds

# Remote registry instance configuration in repository/conf/registry.xml
wso2::registry_instances:
  shared_registry:
    datasource: identity_ds
    read_only: false
    registry_root: /
    enable_cache: true
    overwrite: true

# Registry mount configuration in repository/conf/registry.xml
wso2::registry_mounts:
  config_registry:
    instance_id: shared_registry
    path: /_system/config
    target_path: /_system/config
    overwrite: true

  governance_registry:
    instance_id: shared_registry
    path: /_system/governance
    target_path: /_system/governance
    overwrite: true

# Identity related property configurations in repository/conf/identity/identity.xml
wso2::session_persist:
  enabled: true
  temporary: true
  pool_size: 0

wso2::session_cleanUp:
  enabled: true
  timeout: 20160
  period: 1140
  delete_chunk_size: 50000

wso2::operation_cleanUp:
  enabled: true

wso2::openID:
  skip_user_consent: false
  remember_me_timeout: 7200
  disable_dumbmode   : false
  remember_me_expir: 7200

wso2::time_config:
  session_idle_timeout : 15
  remember_me_timeout  : 20160

wso2::oAuth:
  app_info_cache_timeout : -1
  auth_grant_cache_timeout  : -1
  session_data_cache_timeout   : -1
  claim_cache_timeout   : -1
  auth_code_default_validity_period : 300
  access_token_default_validity_period : 3600
  user_access_token_default_validity_period : 3600
  refresh_token_validity_period : 84600
  time_stamp_skew   : 0
  renew_refresh_token_for_refresh_grant : true
  strict_client_credential_validation   : false
  enable_assertions_UserName : false
  enable_access_token_partitioning : false
  auth_context_token_generation_enabled : false
  auth_context_token_generation_TTL : 15
  id_token_expiration : 3600
  openIDConnect_skip_user_consent: false
  sign_jwt_spey: false
  token_persistence_enable: true
  token_persistence_pool_size: 0
  token_persistence_retry_count: 5

wso2::sso:
  persistance_cache_timeout: 157680000
  session_index_timeout: 157680000
  single_logout_retry_count: 5
  single_logout_retry_interval: 60000
  sAMLresponse_validity_period: 5
  use_authenticated_user_domain_crypto: false
  slo_host_name_verifi_enabled: true
  tenant_partitioning_enabled: false

wso2::passiveSTS:
  slo_host_name_verifi_enabled: true

wso2::evenet_listeners:
  user_store_action_listener: true
  identity_mgt_event_listener: false
  identity_governance_event_listener: true
  scimuser_operation_listener: true
  identity_scim2_user_operation_listener: false
  identity_store_event_listener: true
  daslogin_data_publisher: false
  dassession_data_publisher: false
  authn_data_publisher_proxy: true

wso2::cache:
  appauth_framework_session_context: false
  authentication_context_cache    : false
  appauth_framework_session_contex: false
  authentication_request_cache : false
  app_info_cache : false
  authorization_grant_cache : false
  oauth_cache : false
  oauth_scope_cache : true
  oauth_session_data_cache : false
  samalsso_participant_cache : false
  samalsso_session_index_cache : false
  samalsso_session_data_cache : false
  service_provider_cache: true
  provisioning_connector_cache : true
  provisioning_entity_cache : false
  service_provider_provisioning_connector_cache: false
  idP_cache_byauth_property : true
  idp_cache_byhri : true
  idp_cache_by_name: true

wso2::tomcat:
 maxThreads : 500
 acceptCount : 500

# Secure vault configuration
# wso2::enable_secure_vault: true
# wso2::secure_vault_configs:
#  key_store_password:
#    secret_alias: Carbon.Security.KeyStore.Password
#    secret_alias_value: repository/conf/carbon.xml//Server/Security/KeyStore/Password,false
#    password: "%{hiera('wso2::key_stores::key_store::password')}"
#
#  key_store_key_password:
#    secret_alias: Carbon.Security.KeyStore.KeyPassword
#    secret_alias_value: repository/conf/carbon.xml//Server/Security/KeyStore/KeyPassword,false
#    password: "%{hiera('wso2::key_stores::key_store::key_password')}"
#
#  trust_store_password:
#    secret_alias: Carbon.Security.TrustStore.Password
#    secret_alias_value: repository/conf/carbon.xml//Server/Security/TrustStore/Password,false
#    password: "%{hiera('wso2::key_stores::trust_store::password')}"
#
#  connector_key_store_password:
#    secret_alias: Server.Service.Connector.keystorePass
#    secret_alias_value: repository/conf/tomcat/catalina-server.xml//Server/Service/Connector[@keystorePass],true
#    password: "%{hiera('wso2::key_stores::connector_key_store::password')}"
#
#  user_manager_admin_password:
#    secret_alias: UserManager.AdminUser.Password
#    secret_alias_value: repository/conf/user-mgt.xml//UserManager/Realm/Configuration/AdminUser/Password,false
#    password: "%{hiera('wso2::super_admin::password')}"
#
#  wso2_carbon_db_password:
#    secret_alias: Datasources.WSO2_CARBON_DB.Configuration.Password
#    secret_alias_value: repository/conf/datasources/master-datasources.xml//datasources-configuration/datasources/datasource[name='WSO2_CARBON_DB']/definition[@type='RDBMS']/configuration/password,false
#    password: "%{hiera('wso2::datasources::common::password')}"
#
#  identity_ds_password:
#    secret_alias: Datasources.WSO2_IDENTITY_DS.Configuration.Password
#    secret_alias_value: repository/conf/datasources/master-datasources.xml//datasources-configuration/datasources/datasource[name='WSO2_IDENTITY_DS']/definition[@type='RDBMS']/configuration/password,false
#    password: "%{hiera('wso2::datasources::mysql::password')}"
#
#  bps_ds_password:
#    secret_alias: Datasources.BPS_DS.Configuration.Password
#    secret_alias_value: repository/conf/datasources/bps-datasources.xml//datasources-configuration/datasources/datasource[name='BPS_DS']/definition[@type='RDBMS']/configuration/password,false
#    password: "%{hiera('wso2::datasources::common::password')}"
#
#  metrics_ds_password:
#    secret_alias: Datasources.WSO2_METRICS_DS.Configuration.Password
#    secret_alias_value: repository/conf/datasources/metrics-datasources.xml//datasources-configuration/datasources/datasource[name='WSO2_METRICS_DS']/definition[@type='RDBMS']/configuration/password,false
#    password: "%{hiera('wso2::datasources::common::password')}"
#
#  authenticator_config_trust_store_password:
#    secret_alias: AuthenticatorConfig.TrustStore.Password
#    secret_alias_value: repository/conf/identity/application-authentication.xml//ApplicationAuthentication/AuthenticatorConfigs/AuthenticatorConfig[@name='OpenIDAuthenticator']/Parameter[@name='TrustStorePassword'],false
#    password: "%{hiera('wso2::key_stores::trust_store::password')}"
#
#  dep_sync_svn_password:
#    secret_alias: Carbon.DeploymentSynchronizer.SvnPassword
#    secret_alias_value: repository/conf/carbon.xml//Server/DeploymentSynchronizer/SvnPassword,true
#    password: password
#
#  thrift_based_entitlement_config_key_store_password:
#    secret_alias: ThirftBasedEntitlementConfig.KeyStore.Password
#    secret_alias_value: repository/conf/identity/identity.xml//Server/EntitlementSettings/ThirftBasedEntitlementConfig/KeyStore/Password,false
#    password: "%{hiera('wso2::key_stores::key_store::password')}"
